{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/answer-model.ts","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/login-warning-dialog/login-warning-dialog.component.ts","./src/app/login-warning-dialog/login-warning-dialog.component.html","./src/app/login.service.ts","./src/app/question-maker/question-maker.component.ts","./src/app/question-maker/question-maker.component.html","./src/app/question-model.ts","./src/app/quizz/quizz.component.ts","./src/app/quizz/quizz.component.html","./src/app/round-end-dialog/round-end-dialog.component.ts","./src/app/round-end-dialog/round-end-dialog.component.html","./src/app/score-model.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class AnswerModel {\n    userName: string;\n    answer: string;\n\n    constructor(userName: string, answer: string) {\n        this.userName = userName;\n        this.answer = answer;\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserModel } from './user-model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { QuestionModel } from './question-model';\r\nimport { ServerResponse } from './server-response';\r\nimport { AnswerModel } from './answer-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAvailableUsers(): Observable<UserModel[]> {\r\n    return this.httpClient.get<UserModel[]>(`${environment.serverUrl}/api/users`);\r\n  }\r\n\r\n  getUserQuestions(user: string): Observable<QuestionModel[]> {\r\n    return this.httpClient.get<QuestionModel[]>(`${environment.serverUrl}/api/questions/${user}`);\r\n  }\r\n\r\n  sendQuestion(question: QuestionModel): Observable<ServerResponse> {\r\n    return this.httpClient.post<ServerResponse>(`${environment.serverUrl}/api/question/${question.createdByUser}`, question);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\nimport { QuizzComponent } from './quizz/quizz.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginPageComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'question', component: QuestionMakerComponent },\n  { path: 'quizz', component: QuizzComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quizz-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { QuizzComponent } from './quizz/quizz.component';\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { LoginWarningDialogComponent } from './login-warning-dialog/login-warning-dialog.component';\nimport { RoundEndDialogComponent } from './round-end-dialog/round-end-dialog.component';\r\n\r\nconst config: SocketIoConfig = { url: environment.serverUrl, options: {} };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginPageComponent,\r\n    QuestionMakerComponent,\r\n    QuizzComponent,\r\n    LoginWarningDialogComponent,\r\n    RoundEndDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    HttpClientModule,\r\n    NgxLoadingModule,\r\n    SocketIoModule.forRoot(config),\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatRadioModule,\r\n    MatSidenavModule,\r\n    MatProgressSpinnerModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\nimport { UserModel } from '../user-model';\r\nimport { LoginService } from '../login.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginWarningDialogComponent } from '../login-warning-dialog/login-warning-dialog.component';\r\n\r\n@Component({\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css', '../app.component.css'],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  usersForm = new FormControl();\r\n  loading: boolean;\r\n  availableUsers: UserModel[] = new Array<UserModel>();\r\n  user: UserModel;\r\n\r\n  constructor(private apiService: ApiService, private loginService: LoginService, private router: Router, private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.apiService.getAvailableUsers().subscribe((data: UserModel[]) => {\r\n      console.log('receiving');\r\n      console.log(data);\r\n      this.availableUsers = data;\r\n      this.loading = false;\r\n    });\r\n    this.checkForStoredUser();\r\n  }\r\n\r\n  private checkForStoredUser() {\r\n    this.user = this.loginService.getStoredUser();\r\n    if (this.user != undefined) {\r\n      this.openWarningDialog();\r\n    }\r\n  }\r\n\r\n  private openWarningDialog() {\r\n    var dialogRef = this.dialog.open(LoginWarningDialogComponent);\r\n    dialogRef.afterClosed().subscribe((shouldRedirect: boolean) => {\r\n      if (shouldRedirect) {\r\n        this.navigateToNextRoute();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSelected(selectedUser: UserModel) {\r\n    this.user = selectedUser;\r\n    this.loginService.storeUser(selectedUser);\r\n    this.navigateToNextRoute();\r\n  }\r\n\r\n  private navigateToNextRoute() {\r\n    if (!this.user.hasAnswered) {\r\n      this.router.navigate(['/question']);\r\n    }\r\n    else {\r\n      this.router.navigate(['/quizz']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"body\">\r\n    <ngx-loading [show]=\"loading\"></ngx-loading>\r\n    <mat-toolbar color=\"primary\">\r\n        Sa longa quizz\r\n        <span class=\"toolbar-spacer\"></span>\r\n        <mat-icon>person</mat-icon>\r\n    </mat-toolbar>\r\n\r\n    <mat-card class=\"login-card-quizz\">\r\n        <mat-card-header>\r\n            <h1 class=\"center-card-element\" style=\"margin-left: -30px;\">SaLongin</h1>\r\n        </mat-card-header>\r\n        <h3 class=\"center-card-element card-contents\">Qual sa longeiro é você?</h3>\r\n        <form>\r\n            <mat-form-field class=\"center-card-element\">\r\n                <mat-label>Selecione</mat-label>\r\n                <mat-select (valueChange)=\"onSelected($event)\">\r\n                    <mat-option *ngFor=\"let user of availableUsers\" [value]=\"user\">\r\n                        <span><img src={{user.photoUrl}} alt=\"Avatar\" class=\"avatar\"></span> {{user.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { UserModel } from '../user-model';\n\n@Component({\n  selector: 'app-login-warning-dialog',\n  templateUrl: './login-warning-dialog.component.html',\n  styleUrls: ['./login-warning-dialog.component.css']\n})\nexport class LoginWarningDialogComponent implements OnInit {\n  user: UserModel;\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.user = this.loginService.getStoredUser();\n  }\n\n}\n","<h1 mat-dialog-title>Aviso</h1>\n<div mat-dialog-content>\n  <p>Você já está logado(a) como '{{user.name}}'</p>\n  <p>Realmente deseja trocar de usuário?</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button cdkFocusInitial [mat-dialog-close]=\"true\" color=\"primary\">Não</button>\n  <button mat-button [mat-dialog-close]=\"false\" color=\"warn\">Sim</button>\n</div>","import { Injectable } from '@angular/core';\r\nimport { UserModel } from './user-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  constructor() { }\r\n\r\n  storeUser(user: UserModel) {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    var st = JSON.parse(localStorage.getItem('user'));\r\n    console.log('Storing user:');\r\n    console.log(st);\r\n  }\r\n\r\n  getStoredUser(): UserModel {\r\n    var user = JSON.parse(localStorage.getItem('user'));\r\n    console.log('Getting user:');\r\n    console.log(user);\r\n    return user;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../login.service';\r\nimport { UserModel } from '../user-model';\r\nimport { ApiService } from '../api.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { QuestionModel } from '../question-model';\r\nimport { ServerResponse } from '../server-response';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  templateUrl: './question-maker.component.html',\r\n  styleUrls: ['./question-maker.component.css', '../app.component.css', '../login-page/login-page.component.css']\r\n})\r\nexport class QuestionMakerComponent implements OnInit {\r\n  user: UserModel;\r\n  loading: boolean;\r\n  userQuestionCount: number;\r\n  currentQuestion: QuestionModel;\r\n  profileForm = new FormGroup({\r\n    question: new FormControl('', [Validators.required, this.noWhitespaceValidator]),\r\n    firstAnswer: new FormControl('', [Validators.required]),\r\n    secondAnswer: new FormControl('', [Validators.required]),\r\n    thirdAnswer: new FormControl('', [Validators.required]),\r\n    correctOption: new FormControl('1'),\r\n  });\r\n\r\n  constructor(private loginService: LoginService, private apiService: ApiService, private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  noWhitespaceValidator(control: FormControl) {\r\n    const isWhitespace = (control.value || '').trim().length === 0;\r\n    const isValid = !isWhitespace;\r\n    return isValid ? null : { 'whitespace': true };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.loginService.getStoredUser();\r\n    this.validateUser();\r\n    this.getUserAnsweredQuestions();\r\n  }\r\n\r\n  onSubmit(formDirective: FormGroupDirective) {\r\n    if (!this.profileForm.valid) {\r\n      this.snackBar.open('É necessário preencher todos os campos', 'Ok', { duration: 3000 });\r\n      return;\r\n    };\r\n\r\n    var model = this.createModel();\r\n\r\n    this.loading = true;\r\n    this.apiService.sendQuestion(model).subscribe((response: ServerResponse) => {\r\n      this.loading = false;\r\n      if (response.message == 'ok') {\r\n        this.snackBar.open('Pergunta registrada!', 'Ok', { duration: 3000 });\r\n        formDirective.resetForm();\r\n        this.profileForm.reset();\r\n        this.profileForm.get('correctOption').setValue('1');\r\n        this.userQuestionCount += 1;\r\n      }\r\n      else {\r\n        this.snackBar.open('Erro desconhecido ' + response.message, 'Ok', { duration: 3000 })\r\n      }\r\n    });\r\n  }\r\n\r\n  private createModel(): QuestionModel {\r\n    return new QuestionModel(\r\n      this.profileForm.value.question,\r\n      this.user.name,\r\n      [\r\n        this.profileForm.value.firstAnswer,\r\n        this.profileForm.value.secondAnswer,\r\n        this.profileForm.value.thirdAnswer\r\n      ],\r\n      this.profileForm.value.correctOption\r\n    );\r\n  }\r\n\r\n  private getUserAnsweredQuestions() {\r\n    this.loading = true;\r\n    this.apiService.getUserQuestions(this.user.name).subscribe((questions) => {\r\n      this.userQuestionCount = questions.length;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private validateUser() {\r\n    if (this.user == undefined) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    else if (this.user.hasAnswered) {\r\n      this.router.navigate(['/quizz']);\r\n    }\r\n  }\r\n\r\n  routeToQuizz() {\r\n    this.router.navigate(['/quizz']);\r\n  }\r\n}\r\n","<ngx-loading [show]=\"loading\"></ngx-loading>\r\n<div *ngIf=\"user != undefined && userQuestionCount != undefined\" class=\"body\">\r\n    <mat-toolbar color=\"primary\">\r\n        Sa longa quizz\r\n        <span class=\"toolbar-spacer\"></span>\r\n        <div>{{user.name}}</div>\r\n        <img src={{user.photoUrl}} class=\"avatar avatar-marging\">\r\n    </mat-toolbar>\r\n    <mat-card class=\"question-card-quizz\" style=\"text-align: center;\">\r\n        <mat-card-title>\r\n            <h2>Pergunta </h2>\r\n        </mat-card-title>\r\n        <h3>Faça uma pergunta e dê três opções</h3>\r\n        <form [formGroup]=\"profileForm\" #formDirective=\"ngForm\">\r\n            <mat-form-field>\r\n                <mat-label>Pergunta</mat-label>\r\n                <input matInput formControlName=\"question\" placeholder=\"Ex. Qual meu nome?\">\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Primeira resposta</mat-label>\r\n                <input matInput formControlName=\"firstAnswer\" placeholder=\"Ex. Méo loraes\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field>\r\n                <mat-label>Segunda resposta</mat-label>\r\n                <input matInput formControlName=\"secondAnswer\" placeholder=\"Ex. Méo loraes\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field>\r\n                <mat-label>Terceira resposta</mat-label>\r\n                <input matInput formControlName=\"thirdAnswer\" placeholder=\"Ex. Méo loraes\">\r\n            </mat-form-field>\r\n            <br>\r\n            <br>\r\n            <mat-label class=\"radio-group\">\r\n                <h4>Selecione a opção correta</h4>\r\n            </mat-label>\r\n            <div>\r\n                <mat-radio-group formControlName=\"correctOption\">\r\n                    <mat-radio-button value=\"1\" class=\"radio-question\">Opção 1</mat-radio-button>\r\n                    <mat-radio-button value=\"2\" class=\"radio-question\">Opção 2</mat-radio-button>\r\n                    <mat-radio-button value=\"3\" class=\"radio-question\">Opção 3</mat-radio-button>\r\n                </mat-radio-group>\r\n            </div>\r\n            <br>\r\n            <button mat-raised-button color=\"accent\" (click)=\"onSubmit(formDirective)\">Enviar</button>\r\n        </form>\r\n        <mat-card-footer>\r\n            <div *ngIf=\"userQuestionCount < 3;else goToQuizz\">\r\n                <h5>{{3 - userQuestionCount}} pergunta(s) faltando</h5>\r\n                <br>\r\n                <br>\r\n            </div>\r\n            <ng-template #goToQuizz>\r\n                <br>\r\n                <button mat-raised-button color=\"accent\" (click)=\"routeToQuizz()\">Ir para o quizz</button>\r\n                <br>\r\n                <br>\r\n            </ng-template>\r\n\r\n        </mat-card-footer>\r\n    </mat-card>\r\n</div>","export class QuestionModel {\r\n    question: string;\r\n    createdByUser: string\r\n    possibleAnswers: Array<string>;\r\n    correctAnswer: string;\r\n\r\n    constructor(question: string, createdBy: string, answers: Array<string>, correctAnswer: string) {\r\n        this.question = question;\r\n        this.createdByUser = createdBy;\r\n        this.possibleAnswers = answers;\r\n        this.correctAnswer = correctAnswer;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LoginService } from '../login.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserModel } from '../user-model';\r\nimport { QuestionQuizzModel } from '../question-quizz-model';\r\nimport { ApiService } from '../api.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ScoreModel } from '../score-model';\r\nimport { AnswerModel } from '../answer-model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RoundEndDialogComponent } from '../round-end-dialog/round-end-dialog.component';\r\n\r\n@Component({\r\n  templateUrl: './quizz.component.html',\r\n  styleUrls: ['./quizz.component.css', '../question-maker/question-maker.component.css', '../app.component.css',]\r\n})\r\nexport class QuizzComponent implements OnInit {\r\n  user: UserModel;\r\n  watingForUsers: boolean;\r\n  waitingMessage: string;\r\n  loading: boolean;\r\n  loadingUsers: boolean;\r\n  currentQuestion: QuestionQuizzModel;\r\n  proportionalTimeLeft: number;\r\n  users: UserModel[];\r\n  spinnerMode: ProgressSpinnerMode = \"determinate\";\r\n  spinnerColor: ThemePalette = 'primary';\r\n  buttonsAreEnabled: boolean;\r\n  quizzWinners: Array<UserModel>;\r\n\r\n  constructor(private socket: Socket, private loginService: LoginService,\r\n    private router: Router, private apiService: ApiService, private snackBar: MatSnackBar, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.loginService.getStoredUser();\r\n    this.socket.connect();\r\n    this.loading = true;\r\n    this.validateUser();\r\n    this.initializeEvents();\r\n    this.loadUsers();\r\n  }\r\n\r\n  private loadUsers() {\r\n    this.loadingUsers = true;\r\n    this.apiService.getAvailableUsers().subscribe((data: UserModel[]) => {\r\n      this.users = data;\r\n      this.loadingUsers = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  private validateUser() {\r\n    if (this.user == undefined) {\r\n      if (this.user == undefined) {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else if (!this.user.hasAnswered) {\r\n        this.router.navigate(['/question']);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUserOfQuestionPhoto(userName: string): string {\r\n    return `${environment.serverUrl}/api/photo/${userName}`;\r\n  }\r\n\r\n  onAnswer(answer: string) {\r\n    var answerIndex = this.currentQuestion.possibleAnswers.indexOf(answer) + 1;\r\n    var answerModel = new AnswerModel(this.user.name, answerIndex.toString());\r\n    this.buttonsAreEnabled = false;\r\n    this.sendAnswer(answerModel);\r\n    this.snackBar.open('Resposta enviada com sucesso', 'Ok', { duration: 3000 });\r\n  }\r\n\r\n  private sendAnswer(answer: AnswerModel) {\r\n    this.socket.emit('answer', answer);\r\n  }\r\n\r\n  private initializeEvents() {\r\n    this.socket.fromEvent('waiting').subscribe((data: string) => {\r\n      this.loading = false;\r\n      this.watingForUsers = true;\r\n      console.log('Waiting ' + data);\r\n      this.waitingMessage = data;\r\n    });\r\n\r\n    this.socket.fromEvent('currentQuestion').subscribe((data: QuestionQuizzModel) => {\r\n      this.dialog.closeAll();\r\n      this.watingForUsers = false;\r\n      this.loading = false;\r\n      this.buttonsAreEnabled = true;\r\n      this.spinnerColor = 'primary';\r\n      console.log('Current question');\r\n      console.log(data);\r\n      this.currentQuestion = data;\r\n    });\r\n\r\n    this.socket.fromEvent('timer').subscribe((data: number) => {\r\n      this.proportionalTimeLeft = data;\r\n      if (data <= 45) {\r\n        this.spinnerColor = 'warn';\r\n      }\r\n      if (data == 0) {\r\n        this.buttonsAreEnabled = false;\r\n      }\r\n    });\r\n\r\n    this.socket.fromEvent('score').subscribe((score: ScoreModel) => {\r\n      this.users = score.users;\r\n\r\n      score.winnners = score.winnners.map((user) => this.getUserOfQuestionPhoto(user));\r\n      score.loosers = score.loosers.map((user) => this.getUserOfQuestionPhoto(user));\r\n      this.dialog.open(RoundEndDialogComponent, { data: score });\r\n    });\r\n\r\n    this.socket.fromEvent('winner').subscribe((winners: Array<UserModel>) => {\r\n      this.quizzWinners = winners;\r\n    });\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\n    Sa longa quizz\n    <span class=\"toolbar-spacer\"></span>\n    <div>{{user.name}}</div>\n    <img src={{user.photoUrl}} class=\"avatar avatar-marging\">\n</mat-toolbar>\n<mat-sidenav-container>\n    <mat-sidenav mode=\"side\" opened>\n        <ngx-loading [show]=\"loadingUsers\"></ngx-loading>\n        <h2 style=\"color: white; font-weight: normal;\">Placar</h2>\n        <div *ngFor=\"let user of users\">\n            <h4 style=\"color: white; font-weight: normal;\">\n                <img src={{user.photoUrl}} class=\"avatar avatar-marging\">\n                {{user.name}}: {{user.score}}\n            </h4>\n\n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content style=\"background-color: #e8e8e8;\">\n        <div *ngIf=\"quizzWinners != undefined; else OnGoingQuizz\">\n            <div *ngIf=\"quizzWinners.length == 1;\">\n                <mat-card style=\"text-align: center;\">\n                    <mat-card-title>\n                        Vencedor: {{quizzWinners[0].name}}\n                    </mat-card-title>\n                    <mat-card-content>\n                        <img src=\"{{quizzWinners[0].photoUrl}}\" class=\"winner-image border-circular\">\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div *ngIf=\"quizzWinners.length > 1;\">\n                <mat-card style=\"text-align: center;\">\n                    <mat-card-title>\n                        Vencedores: <span *ngFor=\"let user of quizzWinners\"\n                            style=\"margin-right: 10px;\">{{user.name}}</span>\n                    </mat-card-title>\n                    <mat-card-content>\n                        <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n                            <mat-grid-tile *ngFor=\"let user of quizzWinners\">\n                                <img src=\"{{user.photoUrl}}\">\n                            </mat-grid-tile>\n                        </mat-grid-list>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n        <ng-template #OnGoingQuizz>\n            <mat-card class=\"quizz-card\" style=\"text-align: center;\">\n                <ngx-loading [show]=\"loading\"></ngx-loading>\n                <div *ngIf=\"watingForUsers\">\n                    <mat-card-title>\n                        <h4>{{waitingMessage}}</h4>\n                    </mat-card-title>\n                </div>\n                <div *ngIf=\"currentQuestion != undefined\">\n                    <mat-card-title>\n                        <h3>{{currentQuestion.question}}</h3>\n                    </mat-card-title>\n                    <div *ngFor=\"let possibleAnswer of currentQuestion.possibleAnswers\">\n                        <button mat-flat-button color=\"accent\" [disabled]=\"!buttonsAreEnabled\"\n                            (click)=\"onAnswer(possibleAnswer)\">\n                            {{possibleAnswer}}\n                        </button>\n                        <br>\n                        <br>\n                    </div>\n                    <mat-card-footer>\n                        <mat-grid-list cols=\"2\" rowHeight=\"200px\">\n                            <mat-grid-tile>\n                                <div style=\"text-align: left;\">\n                                    <mat-progress-spinner [mode]=\"spinnerMode\" diameter=\"60\" [color]=\"spinnerColor\"\n                                        [value]=\"proportionalTimeLeft\"></mat-progress-spinner>\n                                </div>\n                            </mat-grid-tile>\n                            <mat-grid-tile>\n                                <div style=\"text-align: left;\">\n                                    <img src=\"{{getUserOfQuestionPhoto(currentQuestion.createdByUser)}}\"\n                                        class=\"created-user-photo\">\n                                </div>\n                            </mat-grid-tile>\n                        </mat-grid-list>\n                    </mat-card-footer>\n                </div>\n            </mat-card>\n        </ng-template>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ScoreModel } from '../score-model';\n\n@Component({\n  selector: 'app-round-end-dialog',\n  templateUrl: './round-end-dialog.component.html',\n  styleUrls: ['./round-end-dialog.component.css', '../app.component.css']\n})\nexport class RoundEndDialogComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: ScoreModel) { }\n\n  ngOnInit(): void {\n    console.log('data');\n    console.log(this.data);\n  }\n\n}\n","<h1 mat-dialog-title>Resultado da rodada</h1>\n<div mat-dialog-content>\n    <p>Vencedores: <span *ngFor=\"let winner of data.winnners\"><img src=\"{{winner}}\" class=\"avatar\"></span></p>\n    <p>Perdedores: <span *ngFor=\"let looser of data.loosers\"><img src=\"{{looser}}\" class=\"avatar\"></span></p>\n</div>\n<div mat-dialog-actions>\n    <button mat-button cdkFocusInitial mat-dialog-close color=\"primary\">Fechar</button>\n</div>","import { UserModel } from './user-model';\n\nexport class ScoreModel {\n    users: Array<UserModel>;\n    winnners: Array<string>;\n    loosers: Array<string>;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // serverUrl: 'http://localhost:8080'\r\n  serverUrl: 'https://salongaquizz.herokuapp.com'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}