{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/question-maker/question-maker.component.ts","./src/app/question-maker/question-maker.component.html","./src/app/quizz/quizz.component.ts","./src/app/quizz/quizz.component.html","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserModel } from './user-model';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAvailableUsers(): Observable<UserModel[]> {\n  return this.httpClient.get<UserModel[]>(`${environment.serverUrl}/api/available-users`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\nimport { QuizzComponent } from './quizz/quizz.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginPageComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'question', component: QuestionMakerComponent },\n  { path: 'quizz', component: QuizzComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quizz-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { QuizzComponent } from './quizz/quizz.component';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { environment } from 'src/environments/environment';\n\nconst config: SocketIoConfig = { url: environment.serverUrl, options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    QuestionMakerComponent,\n    QuizzComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSelectModule,\n    HttpClientModule,\n    NgxLoadingModule,\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, NgModule } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { UserModel } from '../user-model';\n\n@Component({\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css', '../app.component.css'],\n})\nexport class LoginPageComponent implements OnInit {\n  toppings = new FormControl();\n  loading: boolean;\n  availableUsers: UserModel[] = new Array<UserModel>();\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.apiService.getAvailableUsers().subscribe((data: UserModel[]) => {\n      console.log('receiving');\n      console.log(data);\n      this.availableUsers = data;\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"body\">\n    <ngx-loading [show]=\"loading\"></ngx-loading>\n    <mat-toolbar color=\"primary\">\n        Sa longa quizz\n        <span class=\"toolbar-spacer\"></span>\n        <mat-icon>person</mat-icon>\n    </mat-toolbar>\n\n    <mat-card class=\"login-card\">\n        <mat-card-header>\n            <h1 class=\"center-card-element\" style=\"margin-left: -30px;\">SaLongin</h1>\n        </mat-card-header>\n        <h3 class=\"center-card-element card-contents\">Qual sa longeiro é você?</h3>\n        <mat-form-field class=\"center-card-element\">\n            <mat-label>Selecione</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let user of availableUsers\" [value]=\"user\">\n                    <span><img src={{user.photoUrl}} alt=\"Avatar\" class=\"avatar\"></span> {{user.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './question-maker.component.html',\n  styleUrls: ['./question-maker.component.css']\n})\nexport class QuestionMakerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>question-maker works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\n\n@Component({\n  templateUrl: './quizz.component.html',\n  styleUrls: ['./quizz.component.css']\n})\nexport class QuizzComponent implements OnInit {\n\n  constructor(private socket: Socket) { }\n\n  ngOnInit(): void {\n    this.socket.fromEvent(\"message\").subscribe((data: string) => { \n      console.log('[WSS] ' + data) \n    });\n  }\n  getMessage() {\n    \n\n  }\n\n\n}\n","<p>quizz works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // serverUrl: 'http://localhost:8080'\n  serverUrl: 'https://salongaquizz.herokuapp.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}