{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/login.service.ts","./src/app/question-maker/question-maker.component.ts","./src/app/question-maker/question-maker.component.html","./src/app/question-model.ts","./src/app/quizz/quizz.component.ts","./src/app/quizz/quizz.component.html","./src/app/user-model.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserModel } from './user-model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { QuestionModel } from './question-model';\r\nimport { ServerResponse } from './server-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAvailableUsers(): Observable<UserModel[]> {\r\n    return this.httpClient.get<UserModel[]>(`${environment.serverUrl}/api/users`);\r\n  }\r\n\r\n  getUserQuestions(user: string): Observable<QuestionModel[]> {\r\n    return this.httpClient.get<QuestionModel[]>(`${environment.serverUrl}/api/questions/${user}`);\r\n  }\r\n\r\n  sendQuestion(question: QuestionModel): Observable<ServerResponse> {\r\n    return this.httpClient.post<ServerResponse>(`${environment.serverUrl}/api/question/${question.createdByUser}`, question);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\nimport { QuizzComponent } from './quizz/quizz.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginPageComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'question', component: QuestionMakerComponent },\n  { path: 'quizz', component: QuizzComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quizz-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { QuizzComponent } from './quizz/quizz.component';\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\n\r\nconst config: SocketIoConfig = { url: environment.serverUrl, options: {} };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginPageComponent,\r\n    QuestionMakerComponent,\r\n    QuizzComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    HttpClientModule,\r\n    NgxLoadingModule,\r\n    SocketIoModule.forRoot(config),\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatRadioModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\nimport { UserModel } from '../user-model';\r\nimport { LoginService } from '../login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css', '../app.component.css'],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  usersForm = new FormControl();\r\n  loading: boolean;\r\n  availableUsers: UserModel[] = new Array<UserModel>();\r\n\r\n  constructor(private apiService: ApiService, private loginService: LoginService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.apiService.getAvailableUsers().subscribe((data: UserModel[]) => {\r\n      console.log('receiving');\r\n      console.log(data);\r\n      this.availableUsers = data;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  onSelected(selectedUser: UserModel) {\r\n    this.loginService.loggedUser = selectedUser;\r\n    if(!selectedUser.hasAnswered) {\r\n      this.router.navigate(['/question']);  \r\n    }\r\n    else {\r\n      this.router.navigate(['/quizz']);\r\n    }    \r\n  }\r\n}\r\n","<div class=\"body\">\r\n    <ngx-loading [show]=\"loading\"></ngx-loading>\r\n    <mat-toolbar color=\"primary\">\r\n        Sa longa quizz\r\n        <span class=\"toolbar-spacer\"></span>\r\n        <mat-icon>person</mat-icon>\r\n    </mat-toolbar>\r\n\r\n    <mat-card class=\"login-card-quizz\">\r\n        <mat-card-header>\r\n            <h1 class=\"center-card-element\" style=\"margin-left: -30px;\">SaLongin</h1>\r\n        </mat-card-header>\r\n        <h3 class=\"center-card-element card-contents\">Qual sa longeiro é você?</h3>\r\n        <form>\r\n            <mat-form-field class=\"center-card-element\">\r\n                <mat-label>Selecione</mat-label>\r\n                <mat-select (valueChange)=\"onSelected($event)\">\r\n                    <mat-option *ngFor=\"let user of availableUsers\" [value]=\"user\">\r\n                        <span><img src={{user.photoUrl}} alt=\"Avatar\" class=\"avatar\"></span> {{user.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { UserModel } from './user-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  public loggedUser: UserModel;\r\n  \r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../login.service';\r\nimport { UserModel } from '../user-model';\r\nimport { ApiService } from '../api.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { QuestionModel } from '../question-model';\r\nimport { ServerResponse } from '../server-response';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  templateUrl: './question-maker.component.html',\r\n  styleUrls: ['./question-maker.component.css', '../app.component.css', '../login-page/login-page.component.css']\r\n})\r\nexport class QuestionMakerComponent implements OnInit {\r\n  user: UserModel;\r\n  loading: boolean;\r\n  userQuestionCount: number;\r\n  currentQuestion: QuestionModel;\r\n  profileForm = new FormGroup({\r\n    question: new FormControl('', [Validators.required, this.noWhitespaceValidator]),\r\n    firstAnswer: new FormControl('', [Validators.required]),\r\n    secondAnswer: new FormControl('', [Validators.required]),\r\n    thirdAnswer: new FormControl('', [Validators.required]),\r\n    correctOption: new FormControl('1'),\r\n  });\r\n\r\n  constructor(private loginService: LoginService, private apiService: ApiService, private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  noWhitespaceValidator(control: FormControl) {\r\n    const isWhitespace = (control.value || '').trim().length === 0;\r\n    const isValid = !isWhitespace;\r\n    return isValid ? null : { 'whitespace': true };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.loginService.loggedUser;\r\n    this.validateUser();\r\n    this.getUserAnsweredQuestions();\r\n  }\r\n\r\n  onSubmit(formDirective: FormGroupDirective) {\r\n    if (!this.profileForm.valid) {\r\n      this.snackBar.open('É necessário preencher todos os campos', 'Ok', { duration: 3000 });\r\n      return;\r\n    };\r\n\r\n    var model = this.createModel();\r\n\r\n    this.loading = true;\r\n    this.apiService.sendQuestion(model).subscribe((response: ServerResponse) => {\r\n      this.loading = false;\r\n      if (response.message == 'ok') {\r\n        this.snackBar.open('Pergunta registrada!', 'Ok', { duration: 3000 });\r\n        formDirective.resetForm();\r\n        this.profileForm.reset();\r\n        this.profileForm.get('correctOption').setValue('1');\r\n        this.userQuestionCount += 1;\r\n      }\r\n      else {\r\n        this.snackBar.open('Erro desconhecido ' + response.message, 'Ok', { duration: 3000 })\r\n      }\r\n    });\r\n  }\r\n\r\n  private createModel(): QuestionModel {\r\n    return new QuestionModel(\r\n      this.profileForm.value.question,\r\n      this.user.name,\r\n      [\r\n        this.profileForm.value.firstAnswer,\r\n        this.profileForm.value.secondAnswer,\r\n        this.profileForm.value.thirdAnswer\r\n      ],\r\n      this.profileForm.value.correctOption\r\n    );\r\n  }\r\n\r\n  private getUserAnsweredQuestions() {\r\n    this.loading = true;\r\n    this.apiService.getUserQuestions(this.user.name).subscribe((questions) => {\r\n      this.userQuestionCount = questions.length;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private validateUser() {\r\n    if (this.user == undefined) {\r\n      // TODO: Remove this mock!\r\n      this.user = new UserModel('Bonfa', 0, false, false);\r\n      // this.router.navigate(['/login']);\r\n    }\r\n    else if (this.user.hasAnswered) {\r\n      this.router.navigate(['/quizz']);\r\n    }\r\n  }\r\n\r\n  routeToQuizz() {\r\n    this.loginService.loggedUser = this.user;\r\n    this.router.navigate(['/quizz']);\r\n  }\r\n}\r\n","<ngx-loading [show]=\"loading\"></ngx-loading>\r\n<div *ngIf=\"user != undefined && userQuestionCount != undefined\" class=\"body\">\r\n    <mat-toolbar color=\"primary\">\r\n        Sa longa quizz\r\n        <span class=\"toolbar-spacer\"></span>\r\n        <div>{{user.name}}</div>\r\n        <img src={{user.photoUrl}} class=\"avatar avatar-marging\">\r\n    </mat-toolbar>\r\n    <mat-card class=\"question-card-quizz\" style=\"text-align: center;\">\r\n\r\n        <mat-card-title>\r\n            <h2>Pergunta </h2>\r\n        </mat-card-title>\r\n        <h3>Faça uma pergunta e dê três opções</h3>\r\n        <form [formGroup]=\"profileForm\" #formDirective=\"ngForm\">\r\n            <mat-form-field>\r\n                <mat-label>Pergunta</mat-label>\r\n                <input matInput formControlName=\"question\" placeholder=\"Ex. Qual meu nome?\">\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Primeira resposta</mat-label>\r\n                <input matInput formControlName=\"firstAnswer\" placeholder=\"Ex. Méo loraes\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field>\r\n                <mat-label>Segunda resposta</mat-label>\r\n                <input matInput formControlName=\"secondAnswer\" placeholder=\"Ex. Méo loraes\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field>\r\n                <mat-label>Terceira resposta</mat-label>\r\n                <input matInput formControlName=\"thirdAnswer\" placeholder=\"Ex. Méo loraes\">\r\n            </mat-form-field>\r\n            <br>\r\n            <br>\r\n            <mat-label class=\"radio-group\"><h4>Selecione a opção correta</h4></mat-label>            \r\n            <div >\r\n                <mat-radio-group formControlName=\"correctOption\">\r\n                    <mat-radio-button value=\"1\" class=\"radio-question\">Opção 1</mat-radio-button>\r\n                    <mat-radio-button value=\"2\" class=\"radio-question\">Opção 2</mat-radio-button>\r\n                    <mat-radio-button value=\"3\" class=\"radio-question\">Opção 3</mat-radio-button>\r\n                </mat-radio-group>\r\n            </div>            \r\n            <br>\r\n            <button mat-raised-button color=\"accent\" (click)=\"onSubmit(formDirective)\">Enviar</button>\r\n        </form>\r\n        <mat-card-footer>\r\n            <div *ngIf=\"userQuestionCount < 3;else goToQuizz\">\r\n                <h5>{{3 - userQuestionCount}} pergunta(s) faltando</h5>\r\n            </div>\r\n            <ng-template #goToQuizz >\r\n                <br>\r\n                <button mat-raised-button color=\"accent\" (click)=\"routeToQuizz()\">Ir para o quizz</button>\r\n            </ng-template>\r\n            \r\n        </mat-card-footer>\r\n    </mat-card>\r\n</div>","export class QuestionModel {\r\n    question: string;\r\n    createdByUser: string\r\n    possibleAnswers: Array<string>;\r\n    correctAnswer: string;\r\n\r\n    constructor(question: string, createdBy: string, answers: Array<string>, correctAnswer: string) {\r\n        this.question = question;\r\n        this.createdByUser = createdBy;\r\n        this.possibleAnswers = answers;\r\n        this.correctAnswer = correctAnswer;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LoginService } from '../login.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserModel } from '../user-model';\r\n\r\n@Component({\r\n  templateUrl: './quizz.component.html',\r\n  styleUrls: ['./quizz.component.css']\r\n})\r\nexport class QuizzComponent implements OnInit {\r\n  user: UserModel;\r\n  constructor(private socket: Socket, private loginService: LoginService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.loginService.loggedUser;\r\n    this.validateUser();\r\n    this.initializeEvents();\r\n  }\r\n\r\n  private validateUser() {\r\n    if (this.user == undefined) {\r\n      if (this.user == undefined) {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else if (this.user.hasAnswered) {\r\n        this.router.navigate(['/question']);\r\n      }\r\n    }\r\n  }\r\n\r\n  private initializeEvents() {\r\n    this.socket.fromEvent(\"message\").subscribe((data: string) => {\r\n      console.log('[WSS] ' + data)\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<p>quizz works!</p>\n","export class UserModel {\r\n    name: string;\r\n    score: number;\r\n    hasAnswered: boolean;\r\n    isLogged: boolean;\r\n    photoUrl: string;\r\n\r\n    constructor(name: string, score: number, hasAnswered: boolean, isLogged: boolean) {\r\n        this.name = name;\r\n        this.score = score;\r\n        this.hasAnswered = hasAnswered;\r\n        this.isLogged = isLogged;\r\n        this.photoUrl = `http://localhost:8080/api/photo/${name}`;\r\n    }    \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // serverUrl: 'http://localhost:8080'\r\n  serverUrl: 'https://salongaquizz.herokuapp.com'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}