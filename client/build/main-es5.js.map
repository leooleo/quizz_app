{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login-page/login-page.component.ts","webpack:///src/app/login-page/login-page.component.html","webpack:///src/app/question-maker/question-maker.component.ts","webpack:///src/app/question-maker/question-maker.component.html","webpack:///src/app/quizz/quizz.component.ts","webpack:///src/app/quizz/quizz.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","httpClient","get","serverUrl","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","config","url","options","AppModule","declarations","providers","bootstrap","LoginPageComponent","apiService","toppings","availableUsers","Array","loading","getAvailableUsers","subscribe","data","console","log","QuestionMakerComponent","QuizzComponent","socket","fromEvent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserModel } from './user-model';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAvailableUsers(): Observable<UserModel[]> {\n  return this.httpClient.get<UserModel[]>(`${environment.serverUrl}/api/available-users`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\nimport { QuizzComponent } from './quizz/quizz.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginPageComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'question', component: QuestionMakerComponent },\n  { path: 'quizz', component: QuizzComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quizz-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { QuestionMakerComponent } from './question-maker/question-maker.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { QuizzComponent } from './quizz/quizz.component';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { environment } from 'src/environments/environment';\n\nconst config: SocketIoConfig = { url: environment.serverUrl, options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    QuestionMakerComponent,\n    QuizzComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSelectModule,\n    HttpClientModule,\n    NgxLoadingModule,\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, NgModule } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { UserModel } from '../user-model';\n\n@Component({\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css', '../app.component.css'],\n})\nexport class LoginPageComponent implements OnInit {\n  toppings = new FormControl();\n  loading: boolean;\n  availableUsers: UserModel[] = new Array<UserModel>();\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.apiService.getAvailableUsers().subscribe((data: UserModel[]) => {\n      console.log('receiving');\n      console.log(data);\n      this.availableUsers = data;\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"body\">\n    <ngx-loading [show]=\"loading\"></ngx-loading>\n    <mat-toolbar color=\"primary\">\n        Sa longa quizz\n        <span class=\"toolbar-spacer\"></span>\n        <mat-icon>person</mat-icon>\n    </mat-toolbar>\n\n    <mat-card class=\"login-card\">\n        <mat-card-header>\n            <h1 class=\"center-card-element\" style=\"margin-left: -30px;\">SaLongin</h1>\n        </mat-card-header>\n        <h3 class=\"center-card-element card-contents\">Qual sa longeiro é você?</h3>\n        <mat-form-field class=\"center-card-element\">\n            <mat-label>Selecione</mat-label>\n            <mat-select>\n                <mat-option *ngFor=\"let user of availableUsers\" [value]=\"user\">\n                    <span><img src={{user.photoUrl}} alt=\"Avatar\" class=\"avatar\"></span> {{user.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './question-maker.component.html',\n  styleUrls: ['./question-maker.component.css']\n})\nexport class QuestionMakerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>question-maker works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\n\n@Component({\n  templateUrl: './quizz.component.html',\n  styleUrls: ['./quizz.component.css']\n})\nexport class QuizzComponent implements OnInit {\n\n  constructor(private socket: Socket) { }\n\n  ngOnInit(): void {\n    this.socket.fromEvent(\"message\").subscribe((data: string) => { \n      console.log('[WSS] ' + data) \n    });\n  }\n  getMessage() {\n    \n\n  }\n\n\n}\n","<p>quizz works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // serverUrl: 'http://localhost:8080'\n  serverUrl: 'https://salongaquizz.herokuapp.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}